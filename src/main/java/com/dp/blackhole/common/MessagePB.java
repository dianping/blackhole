// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

package com.dp.blackhole.common;

public final class MessagePB {
  private MessagePB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .blackhole.Message.MessageType type = 1;
    /**
     * <code>required .blackhole.Message.MessageType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .blackhole.Message.MessageType type = 1;</code>
     */
    com.dp.blackhole.common.MessagePB.Message.MessageType getType();

    // optional .blackhole.AppReg appReg = 2;
    /**
     * <code>optional .blackhole.AppReg appReg = 2;</code>
     */
    boolean hasAppReg();
    /**
     * <code>optional .blackhole.AppReg appReg = 2;</code>
     */
    com.dp.blackhole.common.AppRegPB.AppReg getAppReg();
    /**
     * <code>optional .blackhole.AppReg appReg = 2;</code>
     */
    com.dp.blackhole.common.AppRegPB.AppRegOrBuilder getAppRegOrBuilder();

    // optional .blackhole.AssignCollector assignCollector = 3;
    /**
     * <code>optional .blackhole.AssignCollector assignCollector = 3;</code>
     */
    boolean hasAssignCollector();
    /**
     * <code>optional .blackhole.AssignCollector assignCollector = 3;</code>
     */
    com.dp.blackhole.common.AssignCollectorPB.AssignCollector getAssignCollector();
    /**
     * <code>optional .blackhole.AssignCollector assignCollector = 3;</code>
     */
    com.dp.blackhole.common.AssignCollectorPB.AssignCollectorOrBuilder getAssignCollectorOrBuilder();

    // optional .blackhole.AppRoll appRoll = 4;
    /**
     * <code>optional .blackhole.AppRoll appRoll = 4;</code>
     */
    boolean hasAppRoll();
    /**
     * <code>optional .blackhole.AppRoll appRoll = 4;</code>
     */
    com.dp.blackhole.common.AppRollPB.AppRoll getAppRoll();
    /**
     * <code>optional .blackhole.AppRoll appRoll = 4;</code>
     */
    com.dp.blackhole.common.AppRollPB.AppRollOrBuilder getAppRollOrBuilder();

    // optional .blackhole.RecoveryRoll recoveryRoll = 5;
    /**
     * <code>optional .blackhole.RecoveryRoll recoveryRoll = 5;</code>
     */
    boolean hasRecoveryRoll();
    /**
     * <code>optional .blackhole.RecoveryRoll recoveryRoll = 5;</code>
     */
    com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll getRecoveryRoll();
    /**
     * <code>optional .blackhole.RecoveryRoll recoveryRoll = 5;</code>
     */
    com.dp.blackhole.common.RecoveryRollPB.RecoveryRollOrBuilder getRecoveryRollOrBuilder();

    // optional .blackhole.ReadyCollector readyCollector = 6;
    /**
     * <code>optional .blackhole.ReadyCollector readyCollector = 6;</code>
     */
    boolean hasReadyCollector();
    /**
     * <code>optional .blackhole.ReadyCollector readyCollector = 6;</code>
     */
    com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector getReadyCollector();
    /**
     * <code>optional .blackhole.ReadyCollector readyCollector = 6;</code>
     */
    com.dp.blackhole.common.ReadyCollectorPB.ReadyCollectorOrBuilder getReadyCollectorOrBuilder();

    // optional .blackhole.RollID rollID = 7;
    /**
     * <code>optional .blackhole.RollID rollID = 7;</code>
     */
    boolean hasRollID();
    /**
     * <code>optional .blackhole.RollID rollID = 7;</code>
     */
    com.dp.blackhole.common.RollIDPB.RollID getRollID();
    /**
     * <code>optional .blackhole.RollID rollID = 7;</code>
     */
    com.dp.blackhole.common.RollIDPB.RollIDOrBuilder getRollIDOrBuilder();
  }
  /**
   * Protobuf type {@code blackhole.Message}
   */
  public static final class Message extends
      com.google.protobuf.GeneratedMessage
      implements MessageOrBuilder {
    // Use Message.newBuilder() to construct.
    private Message(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Message(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Message defaultInstance;
    public static Message getDefaultInstance() {
      return defaultInstance;
    }

    public Message getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Message(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.dp.blackhole.common.MessagePB.Message.MessageType value = com.dp.blackhole.common.MessagePB.Message.MessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              com.dp.blackhole.common.AppRegPB.AppReg.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = appReg_.toBuilder();
              }
              appReg_ = input.readMessage(com.dp.blackhole.common.AppRegPB.AppReg.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(appReg_);
                appReg_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.dp.blackhole.common.AssignCollectorPB.AssignCollector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = assignCollector_.toBuilder();
              }
              assignCollector_ = input.readMessage(com.dp.blackhole.common.AssignCollectorPB.AssignCollector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(assignCollector_);
                assignCollector_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              com.dp.blackhole.common.AppRollPB.AppRoll.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = appRoll_.toBuilder();
              }
              appRoll_ = input.readMessage(com.dp.blackhole.common.AppRollPB.AppRoll.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(appRoll_);
                appRoll_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = recoveryRoll_.toBuilder();
              }
              recoveryRoll_ = input.readMessage(com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(recoveryRoll_);
                recoveryRoll_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = readyCollector_.toBuilder();
              }
              readyCollector_ = input.readMessage(com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(readyCollector_);
                readyCollector_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              com.dp.blackhole.common.RollIDPB.RollID.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = rollID_.toBuilder();
              }
              rollID_ = input.readMessage(com.dp.blackhole.common.RollIDPB.RollID.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rollID_);
                rollID_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dp.blackhole.common.MessagePB.internal_static_blackhole_Message_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dp.blackhole.common.MessagePB.internal_static_blackhole_Message_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dp.blackhole.common.MessagePB.Message.class, com.dp.blackhole.common.MessagePB.Message.Builder.class);
    }

    public static com.google.protobuf.Parser<Message> PARSER =
        new com.google.protobuf.AbstractParser<Message>() {
      public Message parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Message(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Message> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code blackhole.Message.MessageType}
     */
    public enum MessageType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>HEARTBEART = 1;</code>
       */
      HEARTBEART(0, 1),
      /**
       * <code>APP_REG = 2;</code>
       */
      APP_REG(1, 2),
      /**
       * <code>COLLECTOR_REG = 3;</code>
       */
      COLLECTOR_REG(2, 3),
      /**
       * <code>ASSIGN_COLLECTOR = 4;</code>
       */
      ASSIGN_COLLECTOR(3, 4),
      /**
       * <code>READY_COLLECTOR = 5;</code>
       */
      READY_COLLECTOR(4, 5),
      /**
       * <code>APP_ROLL = 6;</code>
       */
      APP_ROLL(5, 6),
      /**
       * <code>UPLOAD_ROLL = 7;</code>
       */
      UPLOAD_ROLL(6, 7),
      /**
       * <code>UPLOAD_SUCCESS = 8;</code>
       */
      UPLOAD_SUCCESS(7, 8),
      /**
       * <code>UPLOAD_FAIL = 9;</code>
       */
      UPLOAD_FAIL(8, 9),
      /**
       * <code>RECOVERY_ROLL = 10;</code>
       */
      RECOVERY_ROLL(9, 10),
      /**
       * <code>RECOVERY_SUCCESS = 11;</code>
       */
      RECOVERY_SUCCESS(10, 11),
      /**
       * <code>RECOVERY_FAIL = 12;</code>
       */
      RECOVERY_FAIL(11, 12),
      ;

      /**
       * <code>HEARTBEART = 1;</code>
       */
      public static final int HEARTBEART_VALUE = 1;
      /**
       * <code>APP_REG = 2;</code>
       */
      public static final int APP_REG_VALUE = 2;
      /**
       * <code>COLLECTOR_REG = 3;</code>
       */
      public static final int COLLECTOR_REG_VALUE = 3;
      /**
       * <code>ASSIGN_COLLECTOR = 4;</code>
       */
      public static final int ASSIGN_COLLECTOR_VALUE = 4;
      /**
       * <code>READY_COLLECTOR = 5;</code>
       */
      public static final int READY_COLLECTOR_VALUE = 5;
      /**
       * <code>APP_ROLL = 6;</code>
       */
      public static final int APP_ROLL_VALUE = 6;
      /**
       * <code>UPLOAD_ROLL = 7;</code>
       */
      public static final int UPLOAD_ROLL_VALUE = 7;
      /**
       * <code>UPLOAD_SUCCESS = 8;</code>
       */
      public static final int UPLOAD_SUCCESS_VALUE = 8;
      /**
       * <code>UPLOAD_FAIL = 9;</code>
       */
      public static final int UPLOAD_FAIL_VALUE = 9;
      /**
       * <code>RECOVERY_ROLL = 10;</code>
       */
      public static final int RECOVERY_ROLL_VALUE = 10;
      /**
       * <code>RECOVERY_SUCCESS = 11;</code>
       */
      public static final int RECOVERY_SUCCESS_VALUE = 11;
      /**
       * <code>RECOVERY_FAIL = 12;</code>
       */
      public static final int RECOVERY_FAIL_VALUE = 12;


      public final int getNumber() { return value; }

      public static MessageType valueOf(int value) {
        switch (value) {
          case 1: return HEARTBEART;
          case 2: return APP_REG;
          case 3: return COLLECTOR_REG;
          case 4: return ASSIGN_COLLECTOR;
          case 5: return READY_COLLECTOR;
          case 6: return APP_ROLL;
          case 7: return UPLOAD_ROLL;
          case 8: return UPLOAD_SUCCESS;
          case 9: return UPLOAD_FAIL;
          case 10: return RECOVERY_ROLL;
          case 11: return RECOVERY_SUCCESS;
          case 12: return RECOVERY_FAIL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
              public MessageType findValueByNumber(int number) {
                return MessageType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.dp.blackhole.common.MessagePB.Message.getDescriptor().getEnumTypes().get(0);
      }

      private static final MessageType[] VALUES = values();

      public static MessageType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private MessageType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:blackhole.Message.MessageType)
    }

    private int bitField0_;
    // required .blackhole.Message.MessageType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private com.dp.blackhole.common.MessagePB.Message.MessageType type_;
    /**
     * <code>required .blackhole.Message.MessageType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .blackhole.Message.MessageType type = 1;</code>
     */
    public com.dp.blackhole.common.MessagePB.Message.MessageType getType() {
      return type_;
    }

    // optional .blackhole.AppReg appReg = 2;
    public static final int APPREG_FIELD_NUMBER = 2;
    private com.dp.blackhole.common.AppRegPB.AppReg appReg_;
    /**
     * <code>optional .blackhole.AppReg appReg = 2;</code>
     */
    public boolean hasAppReg() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .blackhole.AppReg appReg = 2;</code>
     */
    public com.dp.blackhole.common.AppRegPB.AppReg getAppReg() {
      return appReg_;
    }
    /**
     * <code>optional .blackhole.AppReg appReg = 2;</code>
     */
    public com.dp.blackhole.common.AppRegPB.AppRegOrBuilder getAppRegOrBuilder() {
      return appReg_;
    }

    // optional .blackhole.AssignCollector assignCollector = 3;
    public static final int ASSIGNCOLLECTOR_FIELD_NUMBER = 3;
    private com.dp.blackhole.common.AssignCollectorPB.AssignCollector assignCollector_;
    /**
     * <code>optional .blackhole.AssignCollector assignCollector = 3;</code>
     */
    public boolean hasAssignCollector() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .blackhole.AssignCollector assignCollector = 3;</code>
     */
    public com.dp.blackhole.common.AssignCollectorPB.AssignCollector getAssignCollector() {
      return assignCollector_;
    }
    /**
     * <code>optional .blackhole.AssignCollector assignCollector = 3;</code>
     */
    public com.dp.blackhole.common.AssignCollectorPB.AssignCollectorOrBuilder getAssignCollectorOrBuilder() {
      return assignCollector_;
    }

    // optional .blackhole.AppRoll appRoll = 4;
    public static final int APPROLL_FIELD_NUMBER = 4;
    private com.dp.blackhole.common.AppRollPB.AppRoll appRoll_;
    /**
     * <code>optional .blackhole.AppRoll appRoll = 4;</code>
     */
    public boolean hasAppRoll() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .blackhole.AppRoll appRoll = 4;</code>
     */
    public com.dp.blackhole.common.AppRollPB.AppRoll getAppRoll() {
      return appRoll_;
    }
    /**
     * <code>optional .blackhole.AppRoll appRoll = 4;</code>
     */
    public com.dp.blackhole.common.AppRollPB.AppRollOrBuilder getAppRollOrBuilder() {
      return appRoll_;
    }

    // optional .blackhole.RecoveryRoll recoveryRoll = 5;
    public static final int RECOVERYROLL_FIELD_NUMBER = 5;
    private com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll recoveryRoll_;
    /**
     * <code>optional .blackhole.RecoveryRoll recoveryRoll = 5;</code>
     */
    public boolean hasRecoveryRoll() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .blackhole.RecoveryRoll recoveryRoll = 5;</code>
     */
    public com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll getRecoveryRoll() {
      return recoveryRoll_;
    }
    /**
     * <code>optional .blackhole.RecoveryRoll recoveryRoll = 5;</code>
     */
    public com.dp.blackhole.common.RecoveryRollPB.RecoveryRollOrBuilder getRecoveryRollOrBuilder() {
      return recoveryRoll_;
    }

    // optional .blackhole.ReadyCollector readyCollector = 6;
    public static final int READYCOLLECTOR_FIELD_NUMBER = 6;
    private com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector readyCollector_;
    /**
     * <code>optional .blackhole.ReadyCollector readyCollector = 6;</code>
     */
    public boolean hasReadyCollector() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .blackhole.ReadyCollector readyCollector = 6;</code>
     */
    public com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector getReadyCollector() {
      return readyCollector_;
    }
    /**
     * <code>optional .blackhole.ReadyCollector readyCollector = 6;</code>
     */
    public com.dp.blackhole.common.ReadyCollectorPB.ReadyCollectorOrBuilder getReadyCollectorOrBuilder() {
      return readyCollector_;
    }

    // optional .blackhole.RollID rollID = 7;
    public static final int ROLLID_FIELD_NUMBER = 7;
    private com.dp.blackhole.common.RollIDPB.RollID rollID_;
    /**
     * <code>optional .blackhole.RollID rollID = 7;</code>
     */
    public boolean hasRollID() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .blackhole.RollID rollID = 7;</code>
     */
    public com.dp.blackhole.common.RollIDPB.RollID getRollID() {
      return rollID_;
    }
    /**
     * <code>optional .blackhole.RollID rollID = 7;</code>
     */
    public com.dp.blackhole.common.RollIDPB.RollIDOrBuilder getRollIDOrBuilder() {
      return rollID_;
    }

    private void initFields() {
      type_ = com.dp.blackhole.common.MessagePB.Message.MessageType.HEARTBEART;
      appReg_ = com.dp.blackhole.common.AppRegPB.AppReg.getDefaultInstance();
      assignCollector_ = com.dp.blackhole.common.AssignCollectorPB.AssignCollector.getDefaultInstance();
      appRoll_ = com.dp.blackhole.common.AppRollPB.AppRoll.getDefaultInstance();
      recoveryRoll_ = com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll.getDefaultInstance();
      readyCollector_ = com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector.getDefaultInstance();
      rollID_ = com.dp.blackhole.common.RollIDPB.RollID.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasAppReg()) {
        if (!getAppReg().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasAssignCollector()) {
        if (!getAssignCollector().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasAppRoll()) {
        if (!getAppRoll().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRecoveryRoll()) {
        if (!getRecoveryRoll().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasReadyCollector()) {
        if (!getReadyCollector().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRollID()) {
        if (!getRollID().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, appReg_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, assignCollector_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, appRoll_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, recoveryRoll_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, readyCollector_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, rollID_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, appReg_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, assignCollector_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, appRoll_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, recoveryRoll_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, readyCollector_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, rollID_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.dp.blackhole.common.MessagePB.Message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dp.blackhole.common.MessagePB.Message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dp.blackhole.common.MessagePB.Message parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dp.blackhole.common.MessagePB.Message parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dp.blackhole.common.MessagePB.Message parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.dp.blackhole.common.MessagePB.Message parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.dp.blackhole.common.MessagePB.Message parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.dp.blackhole.common.MessagePB.Message parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.dp.blackhole.common.MessagePB.Message parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.dp.blackhole.common.MessagePB.Message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.dp.blackhole.common.MessagePB.Message prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code blackhole.Message}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.dp.blackhole.common.MessagePB.MessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dp.blackhole.common.MessagePB.internal_static_blackhole_Message_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dp.blackhole.common.MessagePB.internal_static_blackhole_Message_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dp.blackhole.common.MessagePB.Message.class, com.dp.blackhole.common.MessagePB.Message.Builder.class);
      }

      // Construct using com.dp.blackhole.common.MessagePB.Message.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAppRegFieldBuilder();
          getAssignCollectorFieldBuilder();
          getAppRollFieldBuilder();
          getRecoveryRollFieldBuilder();
          getReadyCollectorFieldBuilder();
          getRollIDFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = com.dp.blackhole.common.MessagePB.Message.MessageType.HEARTBEART;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (appRegBuilder_ == null) {
          appReg_ = com.dp.blackhole.common.AppRegPB.AppReg.getDefaultInstance();
        } else {
          appRegBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (assignCollectorBuilder_ == null) {
          assignCollector_ = com.dp.blackhole.common.AssignCollectorPB.AssignCollector.getDefaultInstance();
        } else {
          assignCollectorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (appRollBuilder_ == null) {
          appRoll_ = com.dp.blackhole.common.AppRollPB.AppRoll.getDefaultInstance();
        } else {
          appRollBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (recoveryRollBuilder_ == null) {
          recoveryRoll_ = com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll.getDefaultInstance();
        } else {
          recoveryRollBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (readyCollectorBuilder_ == null) {
          readyCollector_ = com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector.getDefaultInstance();
        } else {
          readyCollectorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (rollIDBuilder_ == null) {
          rollID_ = com.dp.blackhole.common.RollIDPB.RollID.getDefaultInstance();
        } else {
          rollIDBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dp.blackhole.common.MessagePB.internal_static_blackhole_Message_descriptor;
      }

      public com.dp.blackhole.common.MessagePB.Message getDefaultInstanceForType() {
        return com.dp.blackhole.common.MessagePB.Message.getDefaultInstance();
      }

      public com.dp.blackhole.common.MessagePB.Message build() {
        com.dp.blackhole.common.MessagePB.Message result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.dp.blackhole.common.MessagePB.Message buildPartial() {
        com.dp.blackhole.common.MessagePB.Message result = new com.dp.blackhole.common.MessagePB.Message(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (appRegBuilder_ == null) {
          result.appReg_ = appReg_;
        } else {
          result.appReg_ = appRegBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (assignCollectorBuilder_ == null) {
          result.assignCollector_ = assignCollector_;
        } else {
          result.assignCollector_ = assignCollectorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (appRollBuilder_ == null) {
          result.appRoll_ = appRoll_;
        } else {
          result.appRoll_ = appRollBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (recoveryRollBuilder_ == null) {
          result.recoveryRoll_ = recoveryRoll_;
        } else {
          result.recoveryRoll_ = recoveryRollBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (readyCollectorBuilder_ == null) {
          result.readyCollector_ = readyCollector_;
        } else {
          result.readyCollector_ = readyCollectorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (rollIDBuilder_ == null) {
          result.rollID_ = rollID_;
        } else {
          result.rollID_ = rollIDBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dp.blackhole.common.MessagePB.Message) {
          return mergeFrom((com.dp.blackhole.common.MessagePB.Message)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dp.blackhole.common.MessagePB.Message other) {
        if (other == com.dp.blackhole.common.MessagePB.Message.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasAppReg()) {
          mergeAppReg(other.getAppReg());
        }
        if (other.hasAssignCollector()) {
          mergeAssignCollector(other.getAssignCollector());
        }
        if (other.hasAppRoll()) {
          mergeAppRoll(other.getAppRoll());
        }
        if (other.hasRecoveryRoll()) {
          mergeRecoveryRoll(other.getRecoveryRoll());
        }
        if (other.hasReadyCollector()) {
          mergeReadyCollector(other.getReadyCollector());
        }
        if (other.hasRollID()) {
          mergeRollID(other.getRollID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasAppReg()) {
          if (!getAppReg().isInitialized()) {
            
            return false;
          }
        }
        if (hasAssignCollector()) {
          if (!getAssignCollector().isInitialized()) {
            
            return false;
          }
        }
        if (hasAppRoll()) {
          if (!getAppRoll().isInitialized()) {
            
            return false;
          }
        }
        if (hasRecoveryRoll()) {
          if (!getRecoveryRoll().isInitialized()) {
            
            return false;
          }
        }
        if (hasReadyCollector()) {
          if (!getReadyCollector().isInitialized()) {
            
            return false;
          }
        }
        if (hasRollID()) {
          if (!getRollID().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.dp.blackhole.common.MessagePB.Message parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.dp.blackhole.common.MessagePB.Message) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .blackhole.Message.MessageType type = 1;
      private com.dp.blackhole.common.MessagePB.Message.MessageType type_ = com.dp.blackhole.common.MessagePB.Message.MessageType.HEARTBEART;
      /**
       * <code>required .blackhole.Message.MessageType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .blackhole.Message.MessageType type = 1;</code>
       */
      public com.dp.blackhole.common.MessagePB.Message.MessageType getType() {
        return type_;
      }
      /**
       * <code>required .blackhole.Message.MessageType type = 1;</code>
       */
      public Builder setType(com.dp.blackhole.common.MessagePB.Message.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .blackhole.Message.MessageType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = com.dp.blackhole.common.MessagePB.Message.MessageType.HEARTBEART;
        onChanged();
        return this;
      }

      // optional .blackhole.AppReg appReg = 2;
      private com.dp.blackhole.common.AppRegPB.AppReg appReg_ = com.dp.blackhole.common.AppRegPB.AppReg.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.dp.blackhole.common.AppRegPB.AppReg, com.dp.blackhole.common.AppRegPB.AppReg.Builder, com.dp.blackhole.common.AppRegPB.AppRegOrBuilder> appRegBuilder_;
      /**
       * <code>optional .blackhole.AppReg appReg = 2;</code>
       */
      public boolean hasAppReg() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .blackhole.AppReg appReg = 2;</code>
       */
      public com.dp.blackhole.common.AppRegPB.AppReg getAppReg() {
        if (appRegBuilder_ == null) {
          return appReg_;
        } else {
          return appRegBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .blackhole.AppReg appReg = 2;</code>
       */
      public Builder setAppReg(com.dp.blackhole.common.AppRegPB.AppReg value) {
        if (appRegBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          appReg_ = value;
          onChanged();
        } else {
          appRegBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .blackhole.AppReg appReg = 2;</code>
       */
      public Builder setAppReg(
          com.dp.blackhole.common.AppRegPB.AppReg.Builder builderForValue) {
        if (appRegBuilder_ == null) {
          appReg_ = builderForValue.build();
          onChanged();
        } else {
          appRegBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .blackhole.AppReg appReg = 2;</code>
       */
      public Builder mergeAppReg(com.dp.blackhole.common.AppRegPB.AppReg value) {
        if (appRegBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              appReg_ != com.dp.blackhole.common.AppRegPB.AppReg.getDefaultInstance()) {
            appReg_ =
              com.dp.blackhole.common.AppRegPB.AppReg.newBuilder(appReg_).mergeFrom(value).buildPartial();
          } else {
            appReg_ = value;
          }
          onChanged();
        } else {
          appRegBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .blackhole.AppReg appReg = 2;</code>
       */
      public Builder clearAppReg() {
        if (appRegBuilder_ == null) {
          appReg_ = com.dp.blackhole.common.AppRegPB.AppReg.getDefaultInstance();
          onChanged();
        } else {
          appRegBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .blackhole.AppReg appReg = 2;</code>
       */
      public com.dp.blackhole.common.AppRegPB.AppReg.Builder getAppRegBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAppRegFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .blackhole.AppReg appReg = 2;</code>
       */
      public com.dp.blackhole.common.AppRegPB.AppRegOrBuilder getAppRegOrBuilder() {
        if (appRegBuilder_ != null) {
          return appRegBuilder_.getMessageOrBuilder();
        } else {
          return appReg_;
        }
      }
      /**
       * <code>optional .blackhole.AppReg appReg = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.dp.blackhole.common.AppRegPB.AppReg, com.dp.blackhole.common.AppRegPB.AppReg.Builder, com.dp.blackhole.common.AppRegPB.AppRegOrBuilder> 
          getAppRegFieldBuilder() {
        if (appRegBuilder_ == null) {
          appRegBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.dp.blackhole.common.AppRegPB.AppReg, com.dp.blackhole.common.AppRegPB.AppReg.Builder, com.dp.blackhole.common.AppRegPB.AppRegOrBuilder>(
                  appReg_,
                  getParentForChildren(),
                  isClean());
          appReg_ = null;
        }
        return appRegBuilder_;
      }

      // optional .blackhole.AssignCollector assignCollector = 3;
      private com.dp.blackhole.common.AssignCollectorPB.AssignCollector assignCollector_ = com.dp.blackhole.common.AssignCollectorPB.AssignCollector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.dp.blackhole.common.AssignCollectorPB.AssignCollector, com.dp.blackhole.common.AssignCollectorPB.AssignCollector.Builder, com.dp.blackhole.common.AssignCollectorPB.AssignCollectorOrBuilder> assignCollectorBuilder_;
      /**
       * <code>optional .blackhole.AssignCollector assignCollector = 3;</code>
       */
      public boolean hasAssignCollector() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .blackhole.AssignCollector assignCollector = 3;</code>
       */
      public com.dp.blackhole.common.AssignCollectorPB.AssignCollector getAssignCollector() {
        if (assignCollectorBuilder_ == null) {
          return assignCollector_;
        } else {
          return assignCollectorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .blackhole.AssignCollector assignCollector = 3;</code>
       */
      public Builder setAssignCollector(com.dp.blackhole.common.AssignCollectorPB.AssignCollector value) {
        if (assignCollectorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          assignCollector_ = value;
          onChanged();
        } else {
          assignCollectorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .blackhole.AssignCollector assignCollector = 3;</code>
       */
      public Builder setAssignCollector(
          com.dp.blackhole.common.AssignCollectorPB.AssignCollector.Builder builderForValue) {
        if (assignCollectorBuilder_ == null) {
          assignCollector_ = builderForValue.build();
          onChanged();
        } else {
          assignCollectorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .blackhole.AssignCollector assignCollector = 3;</code>
       */
      public Builder mergeAssignCollector(com.dp.blackhole.common.AssignCollectorPB.AssignCollector value) {
        if (assignCollectorBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              assignCollector_ != com.dp.blackhole.common.AssignCollectorPB.AssignCollector.getDefaultInstance()) {
            assignCollector_ =
              com.dp.blackhole.common.AssignCollectorPB.AssignCollector.newBuilder(assignCollector_).mergeFrom(value).buildPartial();
          } else {
            assignCollector_ = value;
          }
          onChanged();
        } else {
          assignCollectorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .blackhole.AssignCollector assignCollector = 3;</code>
       */
      public Builder clearAssignCollector() {
        if (assignCollectorBuilder_ == null) {
          assignCollector_ = com.dp.blackhole.common.AssignCollectorPB.AssignCollector.getDefaultInstance();
          onChanged();
        } else {
          assignCollectorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .blackhole.AssignCollector assignCollector = 3;</code>
       */
      public com.dp.blackhole.common.AssignCollectorPB.AssignCollector.Builder getAssignCollectorBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getAssignCollectorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .blackhole.AssignCollector assignCollector = 3;</code>
       */
      public com.dp.blackhole.common.AssignCollectorPB.AssignCollectorOrBuilder getAssignCollectorOrBuilder() {
        if (assignCollectorBuilder_ != null) {
          return assignCollectorBuilder_.getMessageOrBuilder();
        } else {
          return assignCollector_;
        }
      }
      /**
       * <code>optional .blackhole.AssignCollector assignCollector = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.dp.blackhole.common.AssignCollectorPB.AssignCollector, com.dp.blackhole.common.AssignCollectorPB.AssignCollector.Builder, com.dp.blackhole.common.AssignCollectorPB.AssignCollectorOrBuilder> 
          getAssignCollectorFieldBuilder() {
        if (assignCollectorBuilder_ == null) {
          assignCollectorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.dp.blackhole.common.AssignCollectorPB.AssignCollector, com.dp.blackhole.common.AssignCollectorPB.AssignCollector.Builder, com.dp.blackhole.common.AssignCollectorPB.AssignCollectorOrBuilder>(
                  assignCollector_,
                  getParentForChildren(),
                  isClean());
          assignCollector_ = null;
        }
        return assignCollectorBuilder_;
      }

      // optional .blackhole.AppRoll appRoll = 4;
      private com.dp.blackhole.common.AppRollPB.AppRoll appRoll_ = com.dp.blackhole.common.AppRollPB.AppRoll.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.dp.blackhole.common.AppRollPB.AppRoll, com.dp.blackhole.common.AppRollPB.AppRoll.Builder, com.dp.blackhole.common.AppRollPB.AppRollOrBuilder> appRollBuilder_;
      /**
       * <code>optional .blackhole.AppRoll appRoll = 4;</code>
       */
      public boolean hasAppRoll() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .blackhole.AppRoll appRoll = 4;</code>
       */
      public com.dp.blackhole.common.AppRollPB.AppRoll getAppRoll() {
        if (appRollBuilder_ == null) {
          return appRoll_;
        } else {
          return appRollBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .blackhole.AppRoll appRoll = 4;</code>
       */
      public Builder setAppRoll(com.dp.blackhole.common.AppRollPB.AppRoll value) {
        if (appRollBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          appRoll_ = value;
          onChanged();
        } else {
          appRollBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .blackhole.AppRoll appRoll = 4;</code>
       */
      public Builder setAppRoll(
          com.dp.blackhole.common.AppRollPB.AppRoll.Builder builderForValue) {
        if (appRollBuilder_ == null) {
          appRoll_ = builderForValue.build();
          onChanged();
        } else {
          appRollBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .blackhole.AppRoll appRoll = 4;</code>
       */
      public Builder mergeAppRoll(com.dp.blackhole.common.AppRollPB.AppRoll value) {
        if (appRollBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              appRoll_ != com.dp.blackhole.common.AppRollPB.AppRoll.getDefaultInstance()) {
            appRoll_ =
              com.dp.blackhole.common.AppRollPB.AppRoll.newBuilder(appRoll_).mergeFrom(value).buildPartial();
          } else {
            appRoll_ = value;
          }
          onChanged();
        } else {
          appRollBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .blackhole.AppRoll appRoll = 4;</code>
       */
      public Builder clearAppRoll() {
        if (appRollBuilder_ == null) {
          appRoll_ = com.dp.blackhole.common.AppRollPB.AppRoll.getDefaultInstance();
          onChanged();
        } else {
          appRollBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .blackhole.AppRoll appRoll = 4;</code>
       */
      public com.dp.blackhole.common.AppRollPB.AppRoll.Builder getAppRollBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getAppRollFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .blackhole.AppRoll appRoll = 4;</code>
       */
      public com.dp.blackhole.common.AppRollPB.AppRollOrBuilder getAppRollOrBuilder() {
        if (appRollBuilder_ != null) {
          return appRollBuilder_.getMessageOrBuilder();
        } else {
          return appRoll_;
        }
      }
      /**
       * <code>optional .blackhole.AppRoll appRoll = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.dp.blackhole.common.AppRollPB.AppRoll, com.dp.blackhole.common.AppRollPB.AppRoll.Builder, com.dp.blackhole.common.AppRollPB.AppRollOrBuilder> 
          getAppRollFieldBuilder() {
        if (appRollBuilder_ == null) {
          appRollBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.dp.blackhole.common.AppRollPB.AppRoll, com.dp.blackhole.common.AppRollPB.AppRoll.Builder, com.dp.blackhole.common.AppRollPB.AppRollOrBuilder>(
                  appRoll_,
                  getParentForChildren(),
                  isClean());
          appRoll_ = null;
        }
        return appRollBuilder_;
      }

      // optional .blackhole.RecoveryRoll recoveryRoll = 5;
      private com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll recoveryRoll_ = com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll, com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll.Builder, com.dp.blackhole.common.RecoveryRollPB.RecoveryRollOrBuilder> recoveryRollBuilder_;
      /**
       * <code>optional .blackhole.RecoveryRoll recoveryRoll = 5;</code>
       */
      public boolean hasRecoveryRoll() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .blackhole.RecoveryRoll recoveryRoll = 5;</code>
       */
      public com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll getRecoveryRoll() {
        if (recoveryRollBuilder_ == null) {
          return recoveryRoll_;
        } else {
          return recoveryRollBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .blackhole.RecoveryRoll recoveryRoll = 5;</code>
       */
      public Builder setRecoveryRoll(com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll value) {
        if (recoveryRollBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          recoveryRoll_ = value;
          onChanged();
        } else {
          recoveryRollBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .blackhole.RecoveryRoll recoveryRoll = 5;</code>
       */
      public Builder setRecoveryRoll(
          com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll.Builder builderForValue) {
        if (recoveryRollBuilder_ == null) {
          recoveryRoll_ = builderForValue.build();
          onChanged();
        } else {
          recoveryRollBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .blackhole.RecoveryRoll recoveryRoll = 5;</code>
       */
      public Builder mergeRecoveryRoll(com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll value) {
        if (recoveryRollBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              recoveryRoll_ != com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll.getDefaultInstance()) {
            recoveryRoll_ =
              com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll.newBuilder(recoveryRoll_).mergeFrom(value).buildPartial();
          } else {
            recoveryRoll_ = value;
          }
          onChanged();
        } else {
          recoveryRollBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .blackhole.RecoveryRoll recoveryRoll = 5;</code>
       */
      public Builder clearRecoveryRoll() {
        if (recoveryRollBuilder_ == null) {
          recoveryRoll_ = com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll.getDefaultInstance();
          onChanged();
        } else {
          recoveryRollBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .blackhole.RecoveryRoll recoveryRoll = 5;</code>
       */
      public com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll.Builder getRecoveryRollBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getRecoveryRollFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .blackhole.RecoveryRoll recoveryRoll = 5;</code>
       */
      public com.dp.blackhole.common.RecoveryRollPB.RecoveryRollOrBuilder getRecoveryRollOrBuilder() {
        if (recoveryRollBuilder_ != null) {
          return recoveryRollBuilder_.getMessageOrBuilder();
        } else {
          return recoveryRoll_;
        }
      }
      /**
       * <code>optional .blackhole.RecoveryRoll recoveryRoll = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll, com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll.Builder, com.dp.blackhole.common.RecoveryRollPB.RecoveryRollOrBuilder> 
          getRecoveryRollFieldBuilder() {
        if (recoveryRollBuilder_ == null) {
          recoveryRollBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll, com.dp.blackhole.common.RecoveryRollPB.RecoveryRoll.Builder, com.dp.blackhole.common.RecoveryRollPB.RecoveryRollOrBuilder>(
                  recoveryRoll_,
                  getParentForChildren(),
                  isClean());
          recoveryRoll_ = null;
        }
        return recoveryRollBuilder_;
      }

      // optional .blackhole.ReadyCollector readyCollector = 6;
      private com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector readyCollector_ = com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector, com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector.Builder, com.dp.blackhole.common.ReadyCollectorPB.ReadyCollectorOrBuilder> readyCollectorBuilder_;
      /**
       * <code>optional .blackhole.ReadyCollector readyCollector = 6;</code>
       */
      public boolean hasReadyCollector() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .blackhole.ReadyCollector readyCollector = 6;</code>
       */
      public com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector getReadyCollector() {
        if (readyCollectorBuilder_ == null) {
          return readyCollector_;
        } else {
          return readyCollectorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .blackhole.ReadyCollector readyCollector = 6;</code>
       */
      public Builder setReadyCollector(com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector value) {
        if (readyCollectorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          readyCollector_ = value;
          onChanged();
        } else {
          readyCollectorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .blackhole.ReadyCollector readyCollector = 6;</code>
       */
      public Builder setReadyCollector(
          com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector.Builder builderForValue) {
        if (readyCollectorBuilder_ == null) {
          readyCollector_ = builderForValue.build();
          onChanged();
        } else {
          readyCollectorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .blackhole.ReadyCollector readyCollector = 6;</code>
       */
      public Builder mergeReadyCollector(com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector value) {
        if (readyCollectorBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              readyCollector_ != com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector.getDefaultInstance()) {
            readyCollector_ =
              com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector.newBuilder(readyCollector_).mergeFrom(value).buildPartial();
          } else {
            readyCollector_ = value;
          }
          onChanged();
        } else {
          readyCollectorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .blackhole.ReadyCollector readyCollector = 6;</code>
       */
      public Builder clearReadyCollector() {
        if (readyCollectorBuilder_ == null) {
          readyCollector_ = com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector.getDefaultInstance();
          onChanged();
        } else {
          readyCollectorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .blackhole.ReadyCollector readyCollector = 6;</code>
       */
      public com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector.Builder getReadyCollectorBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getReadyCollectorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .blackhole.ReadyCollector readyCollector = 6;</code>
       */
      public com.dp.blackhole.common.ReadyCollectorPB.ReadyCollectorOrBuilder getReadyCollectorOrBuilder() {
        if (readyCollectorBuilder_ != null) {
          return readyCollectorBuilder_.getMessageOrBuilder();
        } else {
          return readyCollector_;
        }
      }
      /**
       * <code>optional .blackhole.ReadyCollector readyCollector = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector, com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector.Builder, com.dp.blackhole.common.ReadyCollectorPB.ReadyCollectorOrBuilder> 
          getReadyCollectorFieldBuilder() {
        if (readyCollectorBuilder_ == null) {
          readyCollectorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector, com.dp.blackhole.common.ReadyCollectorPB.ReadyCollector.Builder, com.dp.blackhole.common.ReadyCollectorPB.ReadyCollectorOrBuilder>(
                  readyCollector_,
                  getParentForChildren(),
                  isClean());
          readyCollector_ = null;
        }
        return readyCollectorBuilder_;
      }

      // optional .blackhole.RollID rollID = 7;
      private com.dp.blackhole.common.RollIDPB.RollID rollID_ = com.dp.blackhole.common.RollIDPB.RollID.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.dp.blackhole.common.RollIDPB.RollID, com.dp.blackhole.common.RollIDPB.RollID.Builder, com.dp.blackhole.common.RollIDPB.RollIDOrBuilder> rollIDBuilder_;
      /**
       * <code>optional .blackhole.RollID rollID = 7;</code>
       */
      public boolean hasRollID() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .blackhole.RollID rollID = 7;</code>
       */
      public com.dp.blackhole.common.RollIDPB.RollID getRollID() {
        if (rollIDBuilder_ == null) {
          return rollID_;
        } else {
          return rollIDBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .blackhole.RollID rollID = 7;</code>
       */
      public Builder setRollID(com.dp.blackhole.common.RollIDPB.RollID value) {
        if (rollIDBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rollID_ = value;
          onChanged();
        } else {
          rollIDBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .blackhole.RollID rollID = 7;</code>
       */
      public Builder setRollID(
          com.dp.blackhole.common.RollIDPB.RollID.Builder builderForValue) {
        if (rollIDBuilder_ == null) {
          rollID_ = builderForValue.build();
          onChanged();
        } else {
          rollIDBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .blackhole.RollID rollID = 7;</code>
       */
      public Builder mergeRollID(com.dp.blackhole.common.RollIDPB.RollID value) {
        if (rollIDBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              rollID_ != com.dp.blackhole.common.RollIDPB.RollID.getDefaultInstance()) {
            rollID_ =
              com.dp.blackhole.common.RollIDPB.RollID.newBuilder(rollID_).mergeFrom(value).buildPartial();
          } else {
            rollID_ = value;
          }
          onChanged();
        } else {
          rollIDBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .blackhole.RollID rollID = 7;</code>
       */
      public Builder clearRollID() {
        if (rollIDBuilder_ == null) {
          rollID_ = com.dp.blackhole.common.RollIDPB.RollID.getDefaultInstance();
          onChanged();
        } else {
          rollIDBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .blackhole.RollID rollID = 7;</code>
       */
      public com.dp.blackhole.common.RollIDPB.RollID.Builder getRollIDBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getRollIDFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .blackhole.RollID rollID = 7;</code>
       */
      public com.dp.blackhole.common.RollIDPB.RollIDOrBuilder getRollIDOrBuilder() {
        if (rollIDBuilder_ != null) {
          return rollIDBuilder_.getMessageOrBuilder();
        } else {
          return rollID_;
        }
      }
      /**
       * <code>optional .blackhole.RollID rollID = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.dp.blackhole.common.RollIDPB.RollID, com.dp.blackhole.common.RollIDPB.RollID.Builder, com.dp.blackhole.common.RollIDPB.RollIDOrBuilder> 
          getRollIDFieldBuilder() {
        if (rollIDBuilder_ == null) {
          rollIDBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.dp.blackhole.common.RollIDPB.RollID, com.dp.blackhole.common.RollIDPB.RollID.Builder, com.dp.blackhole.common.RollIDPB.RollIDOrBuilder>(
                  rollID_,
                  getParentForChildren(),
                  isClean());
          rollID_ = null;
        }
        return rollIDBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:blackhole.Message)
    }

    static {
      defaultInstance = new Message(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:blackhole.Message)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_blackhole_Message_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_blackhole_Message_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rMessage.proto\022\tblackhole\032\014AppReg.proto" +
      "\032\025AssignCollector.proto\032\rAppRoll.proto\032\022" +
      "RecoveryRoll.proto\032\024ReadyCollector.proto" +
      "\032\014RollID.proto\"\244\004\n\007Message\022,\n\004type\030\001 \002(\016" +
      "2\036.blackhole.Message.MessageType\022!\n\006appR" +
      "eg\030\002 \001(\0132\021.blackhole.AppReg\0223\n\017assignCol" +
      "lector\030\003 \001(\0132\032.blackhole.AssignCollector" +
      "\022#\n\007appRoll\030\004 \001(\0132\022.blackhole.AppRoll\022-\n" +
      "\014recoveryRoll\030\005 \001(\0132\027.blackhole.Recovery" +
      "Roll\0221\n\016readyCollector\030\006 \001(\0132\031.blackhole",
      ".ReadyCollector\022!\n\006rollID\030\007 \001(\0132\021.blackh" +
      "ole.RollID\"\350\001\n\013MessageType\022\016\n\nHEARTBEART" +
      "\020\001\022\013\n\007APP_REG\020\002\022\021\n\rCOLLECTOR_REG\020\003\022\024\n\020AS" +
      "SIGN_COLLECTOR\020\004\022\023\n\017READY_COLLECTOR\020\005\022\014\n" +
      "\010APP_ROLL\020\006\022\017\n\013UPLOAD_ROLL\020\007\022\022\n\016UPLOAD_S" +
      "UCCESS\020\010\022\017\n\013UPLOAD_FAIL\020\t\022\021\n\rRECOVERY_RO" +
      "LL\020\n\022\024\n\020RECOVERY_SUCCESS\020\013\022\021\n\rRECOVERY_F" +
      "AIL\020\014B$\n\027com.dp.blackhole.commonB\tMessag" +
      "ePB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_blackhole_Message_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_blackhole_Message_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_blackhole_Message_descriptor,
              new java.lang.String[] { "Type", "AppReg", "AssignCollector", "AppRoll", "RecoveryRoll", "ReadyCollector", "RollID", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.dp.blackhole.common.AppRegPB.getDescriptor(),
          com.dp.blackhole.common.AssignCollectorPB.getDescriptor(),
          com.dp.blackhole.common.AppRollPB.getDescriptor(),
          com.dp.blackhole.common.RecoveryRollPB.getDescriptor(),
          com.dp.blackhole.common.ReadyCollectorPB.getDescriptor(),
          com.dp.blackhole.common.RollIDPB.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
